# -*- coding: utf-8 -*-
"""Insight Security Coding Challenge.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15eBs4eD2EahITT4AZ-MFPPaXqEMkJmRm
"""

import pandas as pd

# from google.colab import drive
#
# drive.mount("/content/drive")
#
# path = "/content/drive/My Drive/00. Top Folder/16-Data/count_rectangles"

path = "count_rectangles"

df = pd.read_csv(path, header=None, sep="\]\,\[")

df = df.transpose()

df.iloc[0] = df.iloc[0].str[1:]
df.iloc[-1] = df.iloc[-1].str[:-1]

df = df.iloc[:, 0].str.split(",", expand=True)

df.head(30)

df = df.astype(int)


def lower_bound(input_row, input_col):
    relative_row = input_row

    while relative_row < rows - 1:
        relative_row += 1
        if df.iloc[relative_row][input_col] == 1:  # reached bound
            return relative_row - 1

    return relative_row


def right_bound(input_row, input_col):
    relative_col = input_col

    while relative_col < cols - 1:
        relative_col += 1
        # print(relative_col)
        if df.iloc[input_row][relative_col] == 1:  # reached bound
            return relative_col - 1

    return relative_col


def rectangle_sum(x1, x2, y1, y2):
    summation = 0
    for i in range(x1, x2 + 1):
        for j in range(y1, y2 + 1):
            summation += df.iloc[i][j]
    return summation


def horizontal_prod(y1, y2, x):
    if x < 0 or (x > rows - 1):
        return 1

    prod = 1
    for i in range(y1, y2 + 1):
        prod *= df.iloc[x][i]

    return prod


def vertical_prod(x1, x2, y):
    if y < 0 or (y > cols - 1):
        return 1

    prod = 1
    for i in range(x1, x2 + 1):
        prod *= df.iloc[i][y]

    return prod


rows, cols = df.shape

output_string = ""

for current_row in range(0, rows):
    for current_col in range(0, cols):

        if df.iloc[current_row][current_col] == 0:  # found a potential block
            bottom = lower_bound(current_row, current_col)
            # print(current_col)
            right = right_bound(current_row, current_col)
            summation = rectangle_sum(current_row, bottom, current_col, right)
            top_border_prod = horizontal_prod(current_col, right, current_row - 1)
            bot_border_prod = horizontal_prod(current_col, right, bottom + 1)
            left_border_prod = vertical_prod(current_row, bottom, current_col - 1)
            right_border_prod = vertical_prod(current_row, bottom, right + 1)

            border_prod = (
                top_border_prod * bot_border_prod * left_border_prod * right_border_prod
            )

            # print(current_row, current_col, bottom, right, summation, border_prod)

            if (summation == 0) and (border_prod == 1):
                # print(current_row, current_col, bottom, right, summation, border_prod)
                output_string += (
                    ",["
                    + str(current_row)
                    + ","
                    + str(current_col)
                    + ","
                    + str(bottom)
                    + ","
                    + str(right)
                    + "]"
                )

print(output_string[1:])
